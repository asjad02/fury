#!/bin/bash
#
# This is the Fury launcher script, which will download and run Fury in "standalone" mode. You can
# distribute this file in a Git repository to make it easier for users to run Fury.
#
# Copyright 2018-20 Jon Pretty, Propensive OÃœ.
#

version="0.18.4"
ipfsHash="QmbNqccrMZXfbkoaHdrR3xEQd6qDpyKiZwE8m7Bsni1vw4"
xdgUsrHome="${XDG_DATA_HOME:-"$HOME/.local/share"}"
xdgSysHome="${XDG_DATA_HOME:-/usr/share}"
xdgHome="$([ "$EUID" = "0" ] && echo "${xdgSysHome}" || echo "${xdgUsrHome}")"
furyDir="${xdgHome}/fury"
furyUsr="${furyDir}/usr"
currentDir="${furyUsr}/current"
currentVersion="$(head -n1 "${currentDir}/.version" 2> /dev/null || echo "")"
downloadDir="${furyDir}/downloads"
downloadFile="${downloadDir}/fury-${version}.tar.gz"
ipfsGateway="https://gateway.pinata.cloud/ipfs"
downloadUrl="${ipfsGateway}/${ipfsHash}"
installDir="${furyUsr}/$([ "${currentVersion}" = "${version}" ] && echo "current" || echo "${version}")"
args="$@"

installFury() {
  command -v java > /dev/null || fail java
  command -v javac > /dev/null || fail javac
  mkdir -p "${downloadDir}"
  printf "Downloading Fury ${version}..."
  command -v curl > /dev/null || fail curl
  [ -f "${downloadFile}" ] || curl -Lso "${downloadFile}" "${downloadUrl}" || fail download
  printf "done\n"
  printf "Extracting Fury ${version} into ${installDir}..."
  command -v tar > /dev/null || fail tar
  mkdir -p "${installDir}" && tar xf "${downloadFile}" -C "${installDir}" || fail extract
  printf "done\n"
}

runFury() {
  printf "Launching Fury ${version} in standalone mode...\n"
  FURY_HOME="${installDir}" "${installDir}/bin/fury" standalone ${args}
}

fail() {
  printf "fail\n"
  case "$1" in
    java)     printf "Could not find \033[0;36mjava\033[0m. Please install a JDK using your system's package manager.\n" ;;
    javac)    printf "A JRE was discovered, but could not find \033[0;36mjavac\033[0m. Please install a JDK using your system's package manager.\n" ;;
    curl)     printf "Could not find \033[0;36mcurl\033[0m, which is required to download Fury.\n" ;;
    download) printf "Could not download Fury version ${version}.\n" ;;
    tar)      printf "Could not find \033[0;36mtar\033[0m to extract Fury.\n" ;;
    extract)  printf "An unexpected error occurred while attempting to extract Fury.\n" ;;
  esac
  exit 1
}

([ -d "${installDir}" ] || [ "${currentVersion}" = "${version}" ] || installFury) && runFury
